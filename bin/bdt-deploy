#!/usr/bin/env node

const program = require('commander')
const execSync = require('child_process').execSync
const chalk = require('chalk')
const now = require('../lib/now')
const open = require('open')
/**
 * Usage.
 */

program
  .usage('[options]')
  .option('-m, --message [value]', 'deploy with message')
  .option('-a, --tag [value]', 'deploy with version')
  .parse(process.argv)

/**
 * Help.
 */

program.on('--help', function () {
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # deploy with message'))
  console.log('    $ bdt deploy -m "some new features"')
  console.log()
  console.log(chalk.gray('    # deploy with version'))
  console.log('    $ bdt deploy -a 0.1.0')
  console.log()
})

/**
 * Padding.
 */

console.log()
process.on('exit', function () {
  console.log()
})

/**
 * Settings.
 */

let result = execSync('git branch --list')
let jsonData = result.toString()
console.log(chalk.green(jsonData))
// const env = program.args[0]
// if (env === 'pro' || env === 'dev') {
//   const tag = program.tag || now()
//   const tagName = env + tag
//   const message = program.message || `"version: ${tagName}"`
//   execSync(`git tag -a ${tagName} -m ${message} && git push origin --tags`)
//   console.log(chalk.green('deploy success'))
//   if (env === 'pro') {
//     open('http://bae.blued.cn/dashboard')
//   }
// } else {
//   console.log(chalk.red('参数错误，请添加部署环境 dev或者pro'))
// }
